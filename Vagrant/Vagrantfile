# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure(2) do |config|
  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = "ubuntu/vivid64"

  # Machine-specific config (names and IPs)
  config.vm.define "master" do |machineconfig|
    machineconfig.vm.provider "virtualbox" do |vb|
      vb.name = "master"
    end
    machineconfig.vm.network "private_network", ip: "192.168.33.11"
    machineconfig.vm.hostname = "master"
  end

  config.vm.define "interlock" do |machineconfig|
    machineconfig.vm.provider "virtualbox" do |vb|
      vb.name = "interlock"
    end
    machineconfig.vm.network "private_network", ip: "192.168.33.12"
    machineconfig.vm.hostname = "interlock"
  end

  config.vm.define "frontend01" do |machineconfig|
    machineconfig.vm.provider "virtualbox" do |vb|
      vb.name = "frontend01"
    end
    machineconfig.vm.network "private_network", ip: "192.168.33.20"
    machineconfig.vm.hostname = "web01"
  end

  config.vm.define "frontend02" do |machineconfig|
    machineconfig.vm.provider "virtualbox" do |vb|
      vb.name = "frontend02"
    end
    machineconfig.vm.network "private_network", ip: "192.168.33.21"
    machineconfig.vm.hostname = "web02"
  end

  config.vm.define "worker01" do |machineconfig|
    machineconfig.vm.provider "virtualbox" do |vb|
      vb.name = "worker01"
    end
    machineconfig.vm.network "private_network", ip: "192.168.33.200"
    machineconfig.vm.hostname = "worker01"
  end

  config.vm.define "pg" do |machineconfig|
    machineconfig.vm.provider "virtualbox" do |vb|
      vb.name = "pg"
    end
    machineconfig.vm.network "private_network", ip: "192.168.33.250"
    machineconfig.vm.hostname = "pg"
  end

  # Common config
  config.vm.provider "virtualbox" do |vb|
    vb.gui = false
    vb.memory = "1024"
    vb.cpus = 1
    vb.customize ["modifyvm", :id, "--vram", "8"]
  end

  config.vm.provision "fix-no-tty", type: "shell" do |s|
    s.privileged = false
    s.inline = "sudo sed -i '/tty/!s/mesg n/tty -s \\&\\& mesg n/' /root/.profile"
  end
  config.vm.provision "shell", inline: <<-SHELL
    sudo sh -c 'echo "root:root" | sudo chpasswd'
    sed -i 's/^PermitRootLogin .*/PermitRootLogin yes/' /etc/ssh/sshd_config
    sudo apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D
    sudo sh -c 'echo "deb https://apt.dockerproject.org/repo ubuntu-trusty main" > /etc/apt/sources.list.d/docker.list'
    sudo apt-get update
    sudo apt-get -y install linux-image-extra-$(uname -r)
    sudo apt-get -y install docker-engine
    usermod -a -G docker vagrant   ## add vagrant user to docker group
    sudo sh -c 'echo DOCKER_OPTS=\\"--cluster-store=consul://192.168.33.11:8500 --cluster-advertise=eth1:2375 -H=tcp://0.0.0.0:2375 -H=unix:///var/run/docker.sock\\" >> /etc/default/docker'
    sudo service docker restart    ## not necessary, should already be running
    sleep 5
    sudo docker run hello-world    ## if you want to verify docker-engine is ok
  SHELL
end
